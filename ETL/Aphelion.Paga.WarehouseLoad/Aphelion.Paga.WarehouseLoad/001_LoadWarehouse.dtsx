<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/2/2014 4:29:16 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="WIN-TDGNUUDMOVR"
  DTS:CreatorName="WIN-TDGNUUDMOVR\Administrator"
  DTS:DelayValidation="True"
  DTS:DTSID="{340D1C80-6EEC-458F-9890-C0F2AA1DB516}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.5058.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="001_LoadWarehouse"
  DTS:PackageType="5"
  DTS:VersionBuild="472"
  DTS:VersionGUID="{423196E2-FE21-4C59-83BF-293121D41A67}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="14"
      DTS:DTSID="{6C7D1822-F7DB-49ED-88F1-6BFF5E44D8EC}"
      DTS:ObjectName="ChangeVersion"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="14"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{E58785F4-7FEE-4592-9A2F-911123C8F8E4}"
      DTS:ObjectName="LoadGroupFilter">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">AND LoadGroup = 2000</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{794E1903-C220-4F41-8909-3D87194925AB}"
      DTS:ObjectName="LoadLevel_001"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">99</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Used for testing isloate certain groups of tables"
      DTS:DTSID="{8C78BEAC-5404-4427-8C1D-B48014CA0FF4}"
      DTS:ObjectName="SchemaFilter">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BA19A948-EE5A-4140-AC18-F83D4419EC1F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::strPackageQueryPrefix] +&quot; &quot; +  @[User::strPackageQuery]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="GetInnerQuery">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
	PackageName = CONVERT(CHAR(4),(x.LoadGroup + x.rn)) +'_' + StagingTableName,
	TABLE_SCHEMA,
	strParm1 = 'INNER JOIN paga_change_log.' +x.SourceTable +' AS ct ON		
	base_query.SourceKey = ct.' +x.KeyColumn  +'
WHERE SYS_CHANGE_VERSION &gt;= 0' FROM
(
	SELECT
		ROW_NUMBER() OVER (PARTITION BY base.LoadGroup ORDER BY base.StagingTableName) AS rn,		base.StagingTableName,
		base.KeyColumn,
		base.SourceTable,
		base.BaseQuery,
		LoadGroup = (base.LoadGroup),
		base.TABLE_SCHEMA
	FROM
	(
		SELECT
		
			table_list.StagingTableName,
			CONVERT(VARCHAR(1000), MAX(CASE WHEN ext_prop.name = 'KeyColumn' THEN ext_prop.value END)) AS KeyColumn,
			CONVERT(VARCHAR(1000), MAX(CASE WHEN ext_prop.name = 'SourceTable' THEN ext_prop.value END)) AS SourceTable,
			CONVERT(VARCHAR(MAX), MAX(CASE WHEN ext_prop.name = 'BaseQuery' THEN ext_prop.value END)) AS BaseQuery,
			CONVERT(INT, MAX(CASE WHEN ext_prop.name = 'LoadGroup' THEN ext_prop.value END)) AS LoadGroup,
			CONVERT(CHAR(1),MAX(CASE WHEN ext_prop.name = 'BaseQuery' THEN
				CASE	
					WHEN ext_prop.value IS NULL THEN 0
					WHEN LEN(CONVERT(VARCHAR(max),ext_prop.value)) &gt; 0 THEN 1
					WHEN LEN(CONVERT(VARCHAR(max),ext_prop.value)) = 0 THEN 0
				END
			END)) AS HasBaseQueryDef,
			table_list.TABLE_SCHEMA
		FROM
		(
			SELECT 
				StagingTableName = t.TABLE_SCHEMA +'_' + t.TABLE_NAME,
				major_id = OBJECT_ID('' +t.TABLE_SCHEMA +'.' + t.TABLE_NAME +'') ,
				t.TABLE_SCHEMA
			FROM INFORMATION_SCHEMA.TABLES AS t
		) AS table_list
		INNER JOIN sys.extended_properties as ext_prop ON 
			table_list.major_id = ext_prop.major_id
		WHERE 
			ext_prop.name = 'KeyColumn' OR ext_prop.name = 'SourceTable' OR ext_prop.name = 'BaseQuery' OR ext_prop.name = 'LoadGroup'
		GROUP BY
			table_list.TABLE_SCHEMA,
			table_list.StagingTableName
	) AS base
	INNER JOIN 
	(
		SELECT 
			tsg.TABLE_SCHEMA 
		FROM 
			( 
			SELECT 
				ROW_NUMBER()OVER(ORDER BY ts.TABLE_SCHEMA) as seed, 
				ts.TABLE_SCHEMA 
			FROM 
			( 
				SELECT DISTINCT  
					t.TABLE_SCHEMA 
				FROM INFORMATION_SCHEMA.TABLES AS t 
				WHERE 
					t.TABLE_TYPE = 'BASE TABLE' 
			) as ts 
		) AS tsg 
	) as prefix ON 
		base.TABLE_SCHEMA = prefix.TABLE_SCHEMA
		AND base.HasBaseQueryDef = 1
		AND LoadGroup = 2000
) AS x
</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{28DF549B-0FE8-4084-9374-380B18C8A418}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;FROM&#xA;(&#xA;&#x9;SELECT&#xA;&#x9;&#x9;ROW_NUMBER() OVER (PARTITION BY base.LoadGroup ORDER BY base.StagingTableName) AS rn,&#x9;&#x9;base.StagingTableName,&#xA;&#x9;&#x9;base.KeyColumn,&#xA;&#x9;&#x9;base.SourceTable,&#xA;&#x9;&#x9;base.BaseQuery,&#xA;&#x9;&#x9;LoadGroup = (base.LoadGroup),&#xA;&#x9;&#x9;base.TABLE_SCHEMA&#xA;&#x9;FROM&#xA;&#x9;(&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;table_list.StagingTableName,&#xA;&#x9;&#x9;&#x9;CONVERT(VARCHAR(1000), MAX(CASE WHEN ext_prop.name = 'KeyColumn' THEN ext_prop.value END)) AS KeyColumn,&#xA;&#x9;&#x9;&#x9;CONVERT(VARCHAR(1000), MAX(CASE WHEN ext_prop.name = 'SourceTable' THEN ext_prop.value END)) AS SourceTable,&#xA;&#x9;&#x9;&#x9;CONVERT(VARCHAR(MAX), MAX(CASE WHEN ext_prop.name = 'BaseQuery' THEN ext_prop.value END)) AS BaseQuery,&#xA;&#x9;&#x9;&#x9;CONVERT(INT, MAX(CASE WHEN ext_prop.name = 'LoadGroup' THEN ext_prop.value END)) AS LoadGroup,&#xA;&#x9;&#x9;&#x9;CONVERT(CHAR(1),MAX(CASE WHEN ext_prop.name = 'BaseQuery' THEN&#xA;&#x9;&#x9;&#x9;&#x9;CASE&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ext_prop.value IS NULL THEN 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LEN(CONVERT(VARCHAR(max),ext_prop.value)) &gt; 0 THEN 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LEN(CONVERT(VARCHAR(max),ext_prop.value)) = 0 THEN 0&#xA;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;END)) AS HasBaseQueryDef,&#xA;&#x9;&#x9;&#x9;table_list.TABLE_SCHEMA&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;StagingTableName = t.TABLE_SCHEMA +'_' + t.TABLE_NAME,&#xA;&#x9;&#x9;&#x9;&#x9;major_id = OBJECT_ID('' +t.TABLE_SCHEMA +'.' + t.TABLE_NAME +'') ,&#xA;&#x9;&#x9;&#x9;&#x9;t.TABLE_SCHEMA&#xA;&#x9;&#x9;&#x9;FROM INFORMATION_SCHEMA.TABLES AS t&#xA;&#x9;&#x9;) AS table_list&#xA;&#x9;&#x9;INNER JOIN sys.extended_properties as ext_prop ON &#xA;&#x9;&#x9;&#x9;table_list.major_id = ext_prop.major_id&#xA;&#x9;&#x9;WHERE &#xA;&#x9;&#x9;&#x9;ext_prop.name = 'KeyColumn' OR ext_prop.name = 'SourceTable' OR ext_prop.name = 'BaseQuery' OR ext_prop.name = 'LoadGroup'&#xA;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;table_list.TABLE_SCHEMA,&#xA;&#x9;&#x9;&#x9;table_list.StagingTableName&#xA;&#x9;) AS base&#xA;&#x9;INNER JOIN &#xA;&#x9;(&#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;tsg.TABLE_SCHEMA &#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;( &#xA;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;ROW_NUMBER()OVER(ORDER BY ts.TABLE_SCHEMA) as seed, &#xA;&#x9;&#x9;&#x9;&#x9;ts.TABLE_SCHEMA &#xA;&#x9;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;( &#xA;&#x9;&#x9;&#x9;&#x9;SELECT DISTINCT  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;t.TABLE_SCHEMA &#xA;&#x9;&#x9;&#x9;&#x9;FROM INFORMATION_SCHEMA.TABLES AS t &#xA;&#x9;&#x9;&#x9;&#x9;WHERE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;t.TABLE_TYPE = 'BASE TABLE' &#xA;&#x9;&#x9;&#x9;) as ts &#xA;&#x9;&#x9;) AS tsg &#xA;&#x9;) as prefix ON &#xA;&#x9;&#x9;base.TABLE_SCHEMA = prefix.TABLE_SCHEMA&#xA;&#x9;&#x9;AND base.HasBaseQueryDef = 1&#xA;&#x9;&#x9;&quot;+ @[$Package::LoadGroupFilter] +&quot;&#xA;) AS x&#xA;&quot;+ @[$Package::SchemaFilter]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strPackageQuery">
      <DTS:VariableValue
        DTS:DataType="8">FROM
(
	SELECT
		ROW_NUMBER() OVER (PARTITION BY base.LoadGroup ORDER BY base.StagingTableName) AS rn,		base.StagingTableName,
		base.KeyColumn,
		base.SourceTable,
		base.BaseQuery,
		LoadGroup = (base.LoadGroup),
		base.TABLE_SCHEMA
	FROM
	(
		SELECT
		
			table_list.StagingTableName,
			CONVERT(VARCHAR(1000), MAX(CASE WHEN ext_prop.name = 'KeyColumn' THEN ext_prop.value END)) AS KeyColumn,
			CONVERT(VARCHAR(1000), MAX(CASE WHEN ext_prop.name = 'SourceTable' THEN ext_prop.value END)) AS SourceTable,
			CONVERT(VARCHAR(MAX), MAX(CASE WHEN ext_prop.name = 'BaseQuery' THEN ext_prop.value END)) AS BaseQuery,
			CONVERT(INT, MAX(CASE WHEN ext_prop.name = 'LoadGroup' THEN ext_prop.value END)) AS LoadGroup,
			CONVERT(CHAR(1),MAX(CASE WHEN ext_prop.name = 'BaseQuery' THEN
				CASE	
					WHEN ext_prop.value IS NULL THEN 0
					WHEN LEN(CONVERT(VARCHAR(max),ext_prop.value)) &gt; 0 THEN 1
					WHEN LEN(CONVERT(VARCHAR(max),ext_prop.value)) = 0 THEN 0
				END
			END)) AS HasBaseQueryDef,
			table_list.TABLE_SCHEMA
		FROM
		(
			SELECT 
				StagingTableName = t.TABLE_SCHEMA +'_' + t.TABLE_NAME,
				major_id = OBJECT_ID('' +t.TABLE_SCHEMA +'.' + t.TABLE_NAME +'') ,
				t.TABLE_SCHEMA
			FROM INFORMATION_SCHEMA.TABLES AS t
		) AS table_list
		INNER JOIN sys.extended_properties as ext_prop ON 
			table_list.major_id = ext_prop.major_id
		WHERE 
			ext_prop.name = 'KeyColumn' OR ext_prop.name = 'SourceTable' OR ext_prop.name = 'BaseQuery' OR ext_prop.name = 'LoadGroup'
		GROUP BY
			table_list.TABLE_SCHEMA,
			table_list.StagingTableName
	) AS base
	INNER JOIN 
	(
		SELECT 
			tsg.TABLE_SCHEMA 
		FROM 
			( 
			SELECT 
				ROW_NUMBER()OVER(ORDER BY ts.TABLE_SCHEMA) as seed, 
				ts.TABLE_SCHEMA 
			FROM 
			( 
				SELECT DISTINCT  
					t.TABLE_SCHEMA 
				FROM INFORMATION_SCHEMA.TABLES AS t 
				WHERE 
					t.TABLE_TYPE = 'BASE TABLE' 
			) as ts 
		) AS tsg 
	) as prefix ON 
		base.TABLE_SCHEMA = prefix.TABLE_SCHEMA
		AND base.HasBaseQueryDef = 1
		AND LoadGroup = 2000
) AS x
</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{09002C48-9470-4E73-AACC-FD84C47ECEE7}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA;&#x9;PackageName = CONVERT(CHAR(4),(x.LoadGroup + x.rn)) +'_' + StagingTableName,&#xA;&#x9;TABLE_SCHEMA,&#xA;&#x9;strParm1 = 'INNER JOIN paga_change_log.' +x.SourceTable +' AS ct ON&#x9;&#x9;&#xA;&#x9;base_query.SourceKey = ct.' +x.KeyColumn  +'&#xA;&quot;+ @[User::strVersionFilter] +&quot;'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strPackageQueryPrefix">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
	PackageName = CONVERT(CHAR(4),(x.LoadGroup + x.rn)) +'_' + StagingTableName,
	TABLE_SCHEMA,
	strParm1 = 'INNER JOIN paga_change_log.' +x.SourceTable +' AS ct ON		
	base_query.SourceKey = ct.' +x.KeyColumn  +'
WHERE SYS_CHANGE_VERSION &gt;= 0'</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{12B3C9DD-64CD-4BB9-86F0-64C497599072}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;WHERE SYS_CHANGE_VERSION &gt;= &quot; + (DT_WSTR, 20) @[$Package::ChangeVersion]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strVersionFilter">
      <DTS:VariableValue
        DTS:DataType="8">WHERE SYS_CHANGE_VERSION &gt;= 0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="2">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,22,OnVariableValueChanged</DTS:Property>
    <DTS:Property
      DTS:EventName="OnVariableValueChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\EPT_ExecInParallel"
      DTS:CreationName="SSIS.ExecutePackageTask.3"
      DTS:DelayValidation="True"
      DTS:Description="Execute Package Task"
      DTS:DTSID="{9A7947D9-158E-4651-90F8-5A34FA71EAD9}"
      DTS:ExecutableType="SSIS.ExecutePackageTask.3"
      DTS:LocaleID="-1"
      DTS:ObjectName="EPT_ExecInParallel"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="2">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">1,22,OnVariableValueChanged</DTS:Property>
        <DTS:Property
          DTS:EventName="OnVariableValueChanged"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>010_RunWarehouseInParallel.dtsx</PackageName>
          <ParameterAssignment>
            <ParameterName>parmInnerQuery</ParameterName>
            <BindedVariableOrParameterName>User::GetInnerQuery</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>ChangeVersion</ParameterName>
            <BindedVariableOrParameterName>$Package::ChangeVersion</BindedVariableOrParameterName>
          </ParameterAssignment>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="170,42"
          Id="Package\EPT_ExecInParallel"
          TopLeft="5.5,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>