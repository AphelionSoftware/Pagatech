<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/2/2014 4:29:16 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="WIN-TDGNUUDMOVR"
  DTS:CreatorName="WIN-TDGNUUDMOVR\Administrator"
  DTS:DelayValidation="True"
  DTS:DTSID="{03258E52-3119-4831-A25E-7FD89090C081}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.5058.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="001_LoadStaging"
  DTS:PackageType="5"
  DTS:VersionBuild="287"
  DTS:VersionGUID="{D1D315C6-DDAF-4B53-9E24-407B55F2CE0E}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Initial, Changes"
      DTS:DTSID="{2E57E68C-0C61-4A63-929F-91631B4D386B}"
      DTS:ObjectName="LoadType"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Initial</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Used for testing isloate certain groups of tables"
      DTS:DTSID="{B29B7FF9-CB51-4B20-9071-2599A6125050}"
      DTS:ObjectName="SchemaFilter">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">WHERE TABLE_SCHEMA =  'Bob'</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6C826988-211E-4DD9-A9D9-8DF6930826BE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ChangeOp_Delete">
      <DTS:VariableValue
        DTS:DataType="8">D</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8AFD10E9-4B2F-4E3F-AE77-B7FCE2866FD9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ChangeOp_Insert">
      <DTS:VariableValue
        DTS:DataType="8">I</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0924312D-BB1E-490A-9102-DE74C1ACE20A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ChangeOp_Update">
      <DTS:VariableValue
        DTS:DataType="8">U</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0E3045FD-EEDE-47D0-B01E-A36F18AB9061}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::LoadType] == &quot;Initial&quot; ? (DT_I8) 0 : (DT_I8) (@[User::LastSyncVersion] + @[User::LoopCounter])"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ChangeVersion"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8BA15BF4-B166-43B9-8AF8-58270324C7E2}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_WSTR, 4)YEAR(@[System::StartTime]) + &quot;-&quot; + RIGHT(&quot;0&quot; + (DT_WSTR, 2)MONTH(@[System::StartTime]), 2) + &quot;-&quot; + RIGHT(&quot;0&quot; + (DT_WSTR, 2)DAY(@[System::StartTime]), 2) + &quot; &quot; + RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Hour&quot;, @[System::StartTime]), 2) + &quot;:&quot; + RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Minute&quot;, @[System::StartTime]), 2) + &quot;:&quot; + RIGHT(&quot;0&quot; + (DT_WSTR, 2)DATEPART(&quot;Second&quot;, @[System::StartTime]), 2) + &quot;.&quot; + RIGHT(&quot;00&quot; + (DT_WSTR, 3)DATEPART(&quot;Millisecond&quot;,@[System::StartTime]), 3)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConvertSystemStart">
      <DTS:VariableValue
        DTS:DataType="8">2015-01-23 08:31:40.000</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2E6619F3-1195-406B-9CF4-F12034519966}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentVersion"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">20</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4D450068-DB3D-4E0D-ADB7-8BAB3B15B54A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::CurrentVersion] - @[User::LastSyncVersion]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EndLoop"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">20</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6FF5D855-AEDC-4B71-B38C-30801B906C64}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA;&#x9;PackageName = CONVERT(CHAR(4),(x.package_grp + x.rn)) +'_' + StagingTableName,&#xA;&#x9;strParm1 = &#xA;&#x9;'WHERE&#xA;&#x9;&#x9;&quot; + @[User::LoadTypeFilter]  +&quot;&#x9;&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;FROM paga_change_log.' +x.SourceTable +' AS ct&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;base_query.SourceKey = ct.' +x.KeyColumn &#xA;&#x9;&#x9;&#x9;&#x9;+' AND ct.SYS_CHANGE_OPERATION = ''D'''&#xA;&#x9;&#x9;&#x9;&#x9;&quot;+ @[User::strVersionFilter] +&quot;&#xA;&#x9;&#x9;)'&#xA;&quot;+ @[User::strPackageQuery]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="GetDeletes">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
	PackageName = CONVERT(CHAR(4),(x.package_grp + x.rn)) +'_' + StagingTableName,
	strParm1 = 
	'WHERE
		NOT EXISTS	
		(
			SELECT 
				1
			FROM paga_change_log.' +x.SourceTable +' AS ct		
			WHERE
				base_query.SourceKey = ct.' +x.KeyColumn 
				+' AND ct.SYS_CHANGE_OPERATION = ''D'''
				
		)'
FROM
(
	SELECT
			ROW_NUMBER() OVER (PARTITION BY prefix.package_grp ORDER BY base.StagingTableName) AS rn,		base.StagingTableName,
		base.KeyColumn,
		base.SourceTable,
		base.BaseQuery,
		prefix.package_grp
	FROM
	(
		SELECT
		
			table_list.StagingTableName,
			CONVERT(VARCHAR(1000), MAX(CASE WHEN ext_prop.name = 'KeyColumn' THEN ext_prop.value END)) AS KeyColumn,
			CONVERT(VARCHAR(1000), MAX(CASE WHEN ext_prop.name = 'SourceTable' THEN ext_prop.value END)) AS SourceTable,
			CONVERT(VARCHAR(MAX), MAX(CASE WHEN ext_prop.name = 'BaseQuery' THEN ext_prop.value END)) AS BaseQuery,
			CONVERT(CHAR(1),MAX(CASE WHEN ext_prop.name = 'BaseQuery' THEN
				CASE	
					WHEN ext_prop.value IS NULL THEN 0
					WHEN LEN(CONVERT(VARCHAR(max),ext_prop.value)) &gt; 0 THEN 1
					WHEN LEN(CONVERT(VARCHAR(max),ext_prop.value)) = 0 THEN 0
				END
			END)) AS HasBaseQueryDef,
			table_list.TABLE_SCHEMA
		FROM
		(
			SELECT 
				StagingTableName = t.TABLE_SCHEMA +'_' + t.TABLE_NAME,
				major_id = OBJECT_ID('' +t.TABLE_SCHEMA +'.' + t.TABLE_NAME +'') ,
				t.TABLE_SCHEMA
			FROM INFORMATION_SCHEMA.TABLES AS t
			WHERE TABLE_SCHEMA =  'Bob'		) AS table_list
		INNER JOIN sys.extended_properties as ext_prop ON 
			table_list.major_id = ext_prop.major_id
		WHERE 
			ext_prop.name = 'KeyColumn' OR ext_prop.name = 'SourceTable' OR ext_prop.name = 'BaseQuery'
		GROUP BY
			table_list.TABLE_SCHEMA,
			table_list.StagingTableName
	) AS base
	INNER JOIN 
	(
		SELECT 
			(tsg.seed *100) + 1000 AS package_grp, 
			tsg.TABLE_SCHEMA 
		FROM 
			( 
			SELECT 
				ROW_NUMBER()OVER(ORDER BY ts.TABLE_SCHEMA) as seed, 
				ts.TABLE_SCHEMA 
			FROM 
			( 
				SELECT DISTINCT  
					t.TABLE_SCHEMA 
				FROM INFORMATION_SCHEMA.TABLES AS t 
				WHERE 
					t.TABLE_TYPE = 'BASE TABLE' 
			) as ts 
		) AS tsg 
	) as prefix ON 
		base.TABLE_SCHEMA = prefix.TABLE_SCHEMA
		AND base.HasBaseQueryDef = 1
) AS x</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{000E3BD9-948D-4D9E-85BE-B07622FBE9FB}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA;&#x9;PackageName = CONVERT(CHAR(4),(x.package_grp + x.rn)) +'_' + StagingTableName,&#xA;&#x9;strParm1 = &#xA;&#x9;'WHERE&#xA;&#x9;&#x9;&quot; + @[User::LoadTypeFilter]  +&quot;&#x9;&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;FROM paga_change_log.' +x.SourceTable +' AS ct&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;base_query.SourceKey = ct.' +x.KeyColumn &#xA;&#x9;&#x9;+')'&#xA;&quot;+ @[User::strPackageQuery]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="GetInitial">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
	PackageName = CONVERT(CHAR(4),(x.package_grp + x.rn)) +'_' + StagingTableName,
	strParm1 = 
	'WHERE
		NOT EXISTS	
		(
			SELECT 
				1
			FROM paga_change_log.' +x.SourceTable +' AS ct		
			WHERE
				base_query.SourceKey = ct.' +x.KeyColumn 
		+')'
FROM
(
	SELECT
			ROW_NUMBER() OVER (PARTITION BY prefix.package_grp ORDER BY base.StagingTableName) AS rn,		base.StagingTableName,
		base.KeyColumn,
		base.SourceTable,
		base.BaseQuery,
		prefix.package_grp
	FROM
	(
		SELECT
		
			table_list.StagingTableName,
			CONVERT(VARCHAR(1000), MAX(CASE WHEN ext_prop.name = 'KeyColumn' THEN ext_prop.value END)) AS KeyColumn,
			CONVERT(VARCHAR(1000), MAX(CASE WHEN ext_prop.name = 'SourceTable' THEN ext_prop.value END)) AS SourceTable,
			CONVERT(VARCHAR(MAX), MAX(CASE WHEN ext_prop.name = 'BaseQuery' THEN ext_prop.value END)) AS BaseQuery,
			CONVERT(CHAR(1),MAX(CASE WHEN ext_prop.name = 'BaseQuery' THEN
				CASE	
					WHEN ext_prop.value IS NULL THEN 0
					WHEN LEN(CONVERT(VARCHAR(max),ext_prop.value)) &gt; 0 THEN 1
					WHEN LEN(CONVERT(VARCHAR(max),ext_prop.value)) = 0 THEN 0
				END
			END)) AS HasBaseQueryDef,
			table_list.TABLE_SCHEMA
		FROM
		(
			SELECT 
				StagingTableName = t.TABLE_SCHEMA +'_' + t.TABLE_NAME,
				major_id = OBJECT_ID('' +t.TABLE_SCHEMA +'.' + t.TABLE_NAME +'') ,
				t.TABLE_SCHEMA
			FROM INFORMATION_SCHEMA.TABLES AS t
			WHERE TABLE_SCHEMA =  'Bob'		) AS table_list
		INNER JOIN sys.extended_properties as ext_prop ON 
			table_list.major_id = ext_prop.major_id
		WHERE 
			ext_prop.name = 'KeyColumn' OR ext_prop.name = 'SourceTable' OR ext_prop.name = 'BaseQuery'
		GROUP BY
			table_list.TABLE_SCHEMA,
			table_list.StagingTableName
	) AS base
	INNER JOIN 
	(
		SELECT 
			(tsg.seed *100) + 1000 AS package_grp, 
			tsg.TABLE_SCHEMA 
		FROM 
			( 
			SELECT 
				ROW_NUMBER()OVER(ORDER BY ts.TABLE_SCHEMA) as seed, 
				ts.TABLE_SCHEMA 
			FROM 
			( 
				SELECT DISTINCT  
					t.TABLE_SCHEMA 
				FROM INFORMATION_SCHEMA.TABLES AS t 
				WHERE 
					t.TABLE_TYPE = 'BASE TABLE' 
			) as ts 
		) AS tsg 
	) as prefix ON 
		base.TABLE_SCHEMA = prefix.TABLE_SCHEMA
		AND base.HasBaseQueryDef = 1
) AS x</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AB8355D2-E677-4720-88AE-F22C8EB6F020}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA;&#x9;PackageName = CONVERT(CHAR(4),(x.package_grp + x.rn)) +'_' + StagingTableName,&#xA;&#x9;strParm1 = &#xA;&#x9;'WHERE&#xA;&#x9;&#x9;&quot; + @[User::LoadTypeFilter]  +&quot;&#x9;&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;FROM paga_change_log.' +x.SourceTable +' AS ct&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;base_query.SourceKey = ct.' +x.KeyColumn &#xA;&#x9;&#x9;&#x9;&#x9;+' AND ct.SYS_CHANGE_OPERATION = ''I'''&#xA;&#x9;&#x9;&#x9;&#x9;&quot;+ @[User::strVersionFilter] +&quot;&#xA;&#x9;&#x9;)'&#xA;&quot;+ @[User::strPackageQuery]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="GetInserts">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
	PackageName = CONVERT(CHAR(4),(x.package_grp + x.rn)) +'_' + StagingTableName,
	strParm1 = 
	'WHERE
		NOT EXISTS	
		(
			SELECT 
				1
			FROM paga_change_log.' +x.SourceTable +' AS ct		
			WHERE
				base_query.SourceKey = ct.' +x.KeyColumn 
				+' AND ct.SYS_CHANGE_OPERATION = ''I'''
				
		)'
FROM
(
	SELECT
			ROW_NUMBER() OVER (PARTITION BY prefix.package_grp ORDER BY base.StagingTableName) AS rn,		base.StagingTableName,
		base.KeyColumn,
		base.SourceTable,
		base.BaseQuery,
		prefix.package_grp
	FROM
	(
		SELECT
		
			table_list.StagingTableName,
			CONVERT(VARCHAR(1000), MAX(CASE WHEN ext_prop.name = 'KeyColumn' THEN ext_prop.value END)) AS KeyColumn,
			CONVERT(VARCHAR(1000), MAX(CASE WHEN ext_prop.name = 'SourceTable' THEN ext_prop.value END)) AS SourceTable,
			CONVERT(VARCHAR(MAX), MAX(CASE WHEN ext_prop.name = 'BaseQuery' THEN ext_prop.value END)) AS BaseQuery,
			CONVERT(CHAR(1),MAX(CASE WHEN ext_prop.name = 'BaseQuery' THEN
				CASE	
					WHEN ext_prop.value IS NULL THEN 0
					WHEN LEN(CONVERT(VARCHAR(max),ext_prop.value)) &gt; 0 THEN 1
					WHEN LEN(CONVERT(VARCHAR(max),ext_prop.value)) = 0 THEN 0
				END
			END)) AS HasBaseQueryDef,
			table_list.TABLE_SCHEMA
		FROM
		(
			SELECT 
				StagingTableName = t.TABLE_SCHEMA +'_' + t.TABLE_NAME,
				major_id = OBJECT_ID('' +t.TABLE_SCHEMA +'.' + t.TABLE_NAME +'') ,
				t.TABLE_SCHEMA
			FROM INFORMATION_SCHEMA.TABLES AS t
			WHERE TABLE_SCHEMA =  'Bob'		) AS table_list
		INNER JOIN sys.extended_properties as ext_prop ON 
			table_list.major_id = ext_prop.major_id
		WHERE 
			ext_prop.name = 'KeyColumn' OR ext_prop.name = 'SourceTable' OR ext_prop.name = 'BaseQuery'
		GROUP BY
			table_list.TABLE_SCHEMA,
			table_list.StagingTableName
	) AS base
	INNER JOIN 
	(
		SELECT 
			(tsg.seed *100) + 1000 AS package_grp, 
			tsg.TABLE_SCHEMA 
		FROM 
			( 
			SELECT 
				ROW_NUMBER()OVER(ORDER BY ts.TABLE_SCHEMA) as seed, 
				ts.TABLE_SCHEMA 
			FROM 
			( 
				SELECT DISTINCT  
					t.TABLE_SCHEMA 
				FROM INFORMATION_SCHEMA.TABLES AS t 
				WHERE 
					t.TABLE_TYPE = 'BASE TABLE' 
			) as ts 
		) AS tsg 
	) as prefix ON 
		base.TABLE_SCHEMA = prefix.TABLE_SCHEMA
		AND base.HasBaseQueryDef = 1
) AS x</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{94F642A3-6CC5-42B6-ADCA-595E404E47F5}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA;&#x9;PackageName = CONVERT(CHAR(4),(x.package_grp + x.rn)) +'_' + StagingTableName,&#xA;&#x9;strParm1 = &#xA;&#x9;'WHERE&#xA;&#x9;&#x9;&quot; + @[User::LoadTypeFilter]  +&quot;&#x9;&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;FROM paga_change_log.' +x.SourceTable +' AS ct&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;base_query.SourceKey = ct.' +x.KeyColumn &#xA;&#x9;&#x9;&#x9;&#x9;+' AND ct.SYS_CHANGE_OPERATION = ''U'''&#xA;&#x9;&#x9;&#x9;&#x9;&quot;+ @[User::strVersionFilter] +&quot;&#xA;&#x9;&#x9;)'&#xA;&quot;+ @[User::strPackageQuery]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="GetUpdates">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
	PackageName = CONVERT(CHAR(4),(x.package_grp + x.rn)) +'_' + StagingTableName,
	strParm1 = 
	'WHERE
		NOT EXISTS	
		(
			SELECT 
				1
			FROM paga_change_log.' +x.SourceTable +' AS ct		
			WHERE
				base_query.SourceKey = ct.' +x.KeyColumn 
				+' AND ct.SYS_CHANGE_OPERATION = ''U'''
				
		)'
FROM
(
	SELECT
			ROW_NUMBER() OVER (PARTITION BY prefix.package_grp ORDER BY base.StagingTableName) AS rn,		base.StagingTableName,
		base.KeyColumn,
		base.SourceTable,
		base.BaseQuery,
		prefix.package_grp
	FROM
	(
		SELECT
		
			table_list.StagingTableName,
			CONVERT(VARCHAR(1000), MAX(CASE WHEN ext_prop.name = 'KeyColumn' THEN ext_prop.value END)) AS KeyColumn,
			CONVERT(VARCHAR(1000), MAX(CASE WHEN ext_prop.name = 'SourceTable' THEN ext_prop.value END)) AS SourceTable,
			CONVERT(VARCHAR(MAX), MAX(CASE WHEN ext_prop.name = 'BaseQuery' THEN ext_prop.value END)) AS BaseQuery,
			CONVERT(CHAR(1),MAX(CASE WHEN ext_prop.name = 'BaseQuery' THEN
				CASE	
					WHEN ext_prop.value IS NULL THEN 0
					WHEN LEN(CONVERT(VARCHAR(max),ext_prop.value)) &gt; 0 THEN 1
					WHEN LEN(CONVERT(VARCHAR(max),ext_prop.value)) = 0 THEN 0
				END
			END)) AS HasBaseQueryDef,
			table_list.TABLE_SCHEMA
		FROM
		(
			SELECT 
				StagingTableName = t.TABLE_SCHEMA +'_' + t.TABLE_NAME,
				major_id = OBJECT_ID('' +t.TABLE_SCHEMA +'.' + t.TABLE_NAME +'') ,
				t.TABLE_SCHEMA
			FROM INFORMATION_SCHEMA.TABLES AS t
			WHERE TABLE_SCHEMA =  'Bob'		) AS table_list
		INNER JOIN sys.extended_properties as ext_prop ON 
			table_list.major_id = ext_prop.major_id
		WHERE 
			ext_prop.name = 'KeyColumn' OR ext_prop.name = 'SourceTable' OR ext_prop.name = 'BaseQuery'
		GROUP BY
			table_list.TABLE_SCHEMA,
			table_list.StagingTableName
	) AS base
	INNER JOIN 
	(
		SELECT 
			(tsg.seed *100) + 1000 AS package_grp, 
			tsg.TABLE_SCHEMA 
		FROM 
			( 
			SELECT 
				ROW_NUMBER()OVER(ORDER BY ts.TABLE_SCHEMA) as seed, 
				ts.TABLE_SCHEMA 
			FROM 
			( 
				SELECT DISTINCT  
					t.TABLE_SCHEMA 
				FROM INFORMATION_SCHEMA.TABLES AS t 
				WHERE 
					t.TABLE_TYPE = 'BASE TABLE' 
			) as ts 
		) AS tsg 
	) as prefix ON 
		base.TABLE_SCHEMA = prefix.TABLE_SCHEMA
		AND base.HasBaseQueryDef = 1
) AS x</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A2887ADA-85EF-4EE4-BEC2-793539EAAEA9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LastSyncVersion"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{15A5DE4D-79D9-4F18-9CEE-A8E980BE4D51}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::LoadType] == &quot;Initial&quot; ? &quot;NOT EXISTS&quot;: &quot;EXISTS&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LoadTypeFilter"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8">NOT EXISTS</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0E060045-B866-4298-BE81-CA9AC4DBA95F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LoopCounter"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6F04BAFE-F37A-4B9F-A8DB-CC5B6D1CD578}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;FROM&#xA;(&#xA;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;ROW_NUMBER() OVER (PARTITION BY prefix.package_grp ORDER BY base.StagingTableName) AS rn,&#x9;&#x9;base.StagingTableName,&#xA;&#x9;&#x9;base.KeyColumn,&#xA;&#x9;&#x9;base.SourceTable,&#xA;&#x9;&#x9;base.BaseQuery,&#xA;&#x9;&#x9;prefix.package_grp&#xA;&#x9;FROM&#xA;&#x9;(&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;table_list.StagingTableName,&#xA;&#x9;&#x9;&#x9;CONVERT(VARCHAR(1000), MAX(CASE WHEN ext_prop.name = 'KeyColumn' THEN ext_prop.value END)) AS KeyColumn,&#xA;&#x9;&#x9;&#x9;CONVERT(VARCHAR(1000), MAX(CASE WHEN ext_prop.name = 'SourceTable' THEN ext_prop.value END)) AS SourceTable,&#xA;&#x9;&#x9;&#x9;CONVERT(VARCHAR(MAX), MAX(CASE WHEN ext_prop.name = 'BaseQuery' THEN ext_prop.value END)) AS BaseQuery,&#xA;&#x9;&#x9;&#x9;CONVERT(CHAR(1),MAX(CASE WHEN ext_prop.name = 'BaseQuery' THEN&#xA;&#x9;&#x9;&#x9;&#x9;CASE&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ext_prop.value IS NULL THEN 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LEN(CONVERT(VARCHAR(max),ext_prop.value)) &gt; 0 THEN 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LEN(CONVERT(VARCHAR(max),ext_prop.value)) = 0 THEN 0&#xA;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;END)) AS HasBaseQueryDef,&#xA;&#x9;&#x9;&#x9;table_list.TABLE_SCHEMA&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;StagingTableName = t.TABLE_SCHEMA +'_' + t.TABLE_NAME,&#xA;&#x9;&#x9;&#x9;&#x9;major_id = OBJECT_ID('' +t.TABLE_SCHEMA +'.' + t.TABLE_NAME +'') ,&#xA;&#x9;&#x9;&#x9;&#x9;t.TABLE_SCHEMA&#xA;&#x9;&#x9;&#x9;FROM INFORMATION_SCHEMA.TABLES AS t&#xA;&#x9;&#x9;&#x9;&quot; + @[$Package::SchemaFilter]  +&quot;&#x9;&#x9;) AS table_list&#xA;&#x9;&#x9;INNER JOIN sys.extended_properties as ext_prop ON &#xA;&#x9;&#x9;&#x9;table_list.major_id = ext_prop.major_id&#xA;&#x9;&#x9;WHERE &#xA;&#x9;&#x9;&#x9;ext_prop.name = 'KeyColumn' OR ext_prop.name = 'SourceTable' OR ext_prop.name = 'BaseQuery'&#xA;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;table_list.TABLE_SCHEMA,&#xA;&#x9;&#x9;&#x9;table_list.StagingTableName&#xA;&#x9;) AS base&#xA;&#x9;INNER JOIN &#xA;&#x9;(&#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;(tsg.seed *100) + 1000 AS package_grp, &#xA;&#x9;&#x9;&#x9;tsg.TABLE_SCHEMA &#xA;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;( &#xA;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;ROW_NUMBER()OVER(ORDER BY ts.TABLE_SCHEMA) as seed, &#xA;&#x9;&#x9;&#x9;&#x9;ts.TABLE_SCHEMA &#xA;&#x9;&#x9;&#x9;FROM &#xA;&#x9;&#x9;&#x9;( &#xA;&#x9;&#x9;&#x9;&#x9;SELECT DISTINCT  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;t.TABLE_SCHEMA &#xA;&#x9;&#x9;&#x9;&#x9;FROM INFORMATION_SCHEMA.TABLES AS t &#xA;&#x9;&#x9;&#x9;&#x9;WHERE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;t.TABLE_TYPE = 'BASE TABLE' &#xA;&#x9;&#x9;&#x9;) as ts &#xA;&#x9;&#x9;) AS tsg &#xA;&#x9;) as prefix ON &#xA;&#x9;&#x9;base.TABLE_SCHEMA = prefix.TABLE_SCHEMA&#xA;&#x9;&#x9;AND base.HasBaseQueryDef = 1&#xA;) AS x&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strPackageQuery"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8">FROM
(
	SELECT
			ROW_NUMBER() OVER (PARTITION BY prefix.package_grp ORDER BY base.StagingTableName) AS rn,		base.StagingTableName,
		base.KeyColumn,
		base.SourceTable,
		base.BaseQuery,
		prefix.package_grp
	FROM
	(
		SELECT
		
			table_list.StagingTableName,
			CONVERT(VARCHAR(1000), MAX(CASE WHEN ext_prop.name = 'KeyColumn' THEN ext_prop.value END)) AS KeyColumn,
			CONVERT(VARCHAR(1000), MAX(CASE WHEN ext_prop.name = 'SourceTable' THEN ext_prop.value END)) AS SourceTable,
			CONVERT(VARCHAR(MAX), MAX(CASE WHEN ext_prop.name = 'BaseQuery' THEN ext_prop.value END)) AS BaseQuery,
			CONVERT(CHAR(1),MAX(CASE WHEN ext_prop.name = 'BaseQuery' THEN
				CASE	
					WHEN ext_prop.value IS NULL THEN 0
					WHEN LEN(CONVERT(VARCHAR(max),ext_prop.value)) &gt; 0 THEN 1
					WHEN LEN(CONVERT(VARCHAR(max),ext_prop.value)) = 0 THEN 0
				END
			END)) AS HasBaseQueryDef,
			table_list.TABLE_SCHEMA
		FROM
		(
			SELECT 
				StagingTableName = t.TABLE_SCHEMA +'_' + t.TABLE_NAME,
				major_id = OBJECT_ID('' +t.TABLE_SCHEMA +'.' + t.TABLE_NAME +'') ,
				t.TABLE_SCHEMA
			FROM INFORMATION_SCHEMA.TABLES AS t
			WHERE TABLE_SCHEMA =  'Bob'		) AS table_list
		INNER JOIN sys.extended_properties as ext_prop ON 
			table_list.major_id = ext_prop.major_id
		WHERE 
			ext_prop.name = 'KeyColumn' OR ext_prop.name = 'SourceTable' OR ext_prop.name = 'BaseQuery'
		GROUP BY
			table_list.TABLE_SCHEMA,
			table_list.StagingTableName
	) AS base
	INNER JOIN 
	(
		SELECT 
			(tsg.seed *100) + 1000 AS package_grp, 
			tsg.TABLE_SCHEMA 
		FROM 
			( 
			SELECT 
				ROW_NUMBER()OVER(ORDER BY ts.TABLE_SCHEMA) as seed, 
				ts.TABLE_SCHEMA 
			FROM 
			( 
				SELECT DISTINCT  
					t.TABLE_SCHEMA 
				FROM INFORMATION_SCHEMA.TABLES AS t 
				WHERE 
					t.TABLE_TYPE = 'BASE TABLE' 
			) as ts 
		) AS tsg 
	) as prefix ON 
		base.TABLE_SCHEMA = prefix.TABLE_SCHEMA
		AND base.HasBaseQueryDef = 1
) AS x</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8E522E5C-AE85-4193-9AE8-9FFC6F6542BA}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::LoadType] ==&quot;Initial&quot; ? &quot;&quot; : &quot;+' AND ct.SYS_CHANGE_VERSION =  &quot; +(DT_STR, 20,1252)  @[User::ChangeVersion]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strVersionFilter"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="2">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,22,OnVariableValueChanged</DTS:Property>
    <DTS:Property
      DTS:EventName="OnVariableValueChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\EPT_ExecInParallel_Initial"
      DTS:CreationName="SSIS.ExecutePackageTask.3"
      DTS:Description="Execute Package Task"
      DTS:DTSID="{c084d00d-1db4-4b03-8b3b-e66284429673}"
      DTS:ExecutableType="SSIS.ExecutePackageTask.3"
      DTS:LocaleID="-1"
      DTS:ObjectName="EPT_ExecInParallel_Initial"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="2">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">1,22,OnVariableValueChanged</DTS:Property>
        <DTS:Property
          DTS:EventName="OnVariableValueChanged"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>010_RunStagingInParallel.dtsx</PackageName>
          <ParameterAssignment>
            <ParameterName>parmInnerQuery</ParameterName>
            <BindedVariableOrParameterName>User::GetInitial</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>ChangeVersion</ParameterName>
            <BindedVariableOrParameterName>User::ChangeVersion</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>LoadType</ParameterName>
            <BindedVariableOrParameterName>$Package::LoadType</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>ChangeOperation</ParameterName>
            <BindedVariableOrParameterName>User::ChangeOp_Insert</BindedVariableOrParameterName>
          </ParameterAssignment>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\EST_GetVersionNumbers"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{2189A807-521B-425D-8F43-F8DB156F6FE9}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="EST_GetVersionNumbers"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="2">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">1,22,OnVariableValueChanged</DTS:Property>
        <DTS:Property
          DTS:EventName="OnVariableValueChanged"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{58D08405-99FD-49DC-8B1E-FF6A419E845A}"
          SQLTask:SqlStatementSource="SELECT CurrentVersion, LastSyncVersion FROM [ChangeTracking].[Load_History]"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="CurrentVersion"
            SQLTask:DtsVariableName="User::CurrentVersion" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="LastSyncVersion"
            SQLTask:DtsVariableName="User::LastSyncVersion" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Iterate Through Version Numbers"
      DTS:AssignExpression="@LoopCounter = @LoopCounter + 1"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:Description="For Loop Container"
      DTS:DTSID="{FE6F1B2D-AD6D-4F99-8299-B553D00901D2}"
      DTS:EvalExpression="@LoopCounter &lt;= @EndLoop"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:InitExpression="@LoopCounter = 1"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="Iterate Through Version Numbers">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="2">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">1,22,OnVariableValueChanged</DTS:Property>
        <DTS:Property
          DTS:EventName="OnVariableValueChanged"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
      </DTS:LoggingOptions>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Iterate Through Version Numbers\EPT_ExecInParallel_Deletes"
          DTS:CreationName="SSIS.ExecutePackageTask.3"
          DTS:Description="Execute Package Task"
          DTS:DTSID="{2c108f3e-cd25-4aa3-ac06-cbd26aff86b5}"
          DTS:ExecutableType="SSIS.ExecutePackageTask.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="EPT_ExecInParallel_Deletes"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">1,22,OnVariableValueChanged</DTS:Property>
            <DTS:Property
              DTS:EventName="OnVariableValueChanged"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>010_RunStagingInParallel.dtsx</PackageName>
              <ParameterAssignment>
                <ParameterName>parmInnerQuery</ParameterName>
                <BindedVariableOrParameterName>User::GetDeletes</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>ChangeVersion</ParameterName>
                <BindedVariableOrParameterName>User::ChangeVersion</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>LoadType</ParameterName>
                <BindedVariableOrParameterName>$Package::LoadType</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>ChangeOperation</ParameterName>
                <BindedVariableOrParameterName>User::ChangeOp_Insert</BindedVariableOrParameterName>
              </ParameterAssignment>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Iterate Through Version Numbers\EPT_ExecInParallel_Inserts"
          DTS:CreationName="SSIS.ExecutePackageTask.3"
          DTS:Description="Execute Package Task"
          DTS:DTSID="{39C4C09D-C4CE-458D-8350-1D3B5BF5083B}"
          DTS:ExecutableType="SSIS.ExecutePackageTask.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="EPT_ExecInParallel_Inserts"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">1,22,OnVariableValueChanged</DTS:Property>
            <DTS:Property
              DTS:EventName="OnVariableValueChanged"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>010_RunStagingInParallel.dtsx</PackageName>
              <ParameterAssignment>
                <ParameterName>parmInnerQuery</ParameterName>
                <BindedVariableOrParameterName>User::GetInserts</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>ChangeVersion</ParameterName>
                <BindedVariableOrParameterName>User::ChangeVersion</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>LoadType</ParameterName>
                <BindedVariableOrParameterName>$Package::LoadType</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>ChangeOperation</ParameterName>
                <BindedVariableOrParameterName>User::ChangeOp_Insert</BindedVariableOrParameterName>
              </ParameterAssignment>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Iterate Through Version Numbers\EPT_ExecInParallel_Updates"
          DTS:CreationName="SSIS.ExecutePackageTask.3"
          DTS:Description="Execute Package Task"
          DTS:DTSID="{d1fb4f70-7512-4bc5-9478-977794bea41d}"
          DTS:ExecutableType="SSIS.ExecutePackageTask.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="EPT_ExecInParallel_Updates"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">1,22,OnVariableValueChanged</DTS:Property>
            <DTS:Property
              DTS:EventName="OnVariableValueChanged"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>010_RunStagingInParallel.dtsx</PackageName>
              <ParameterAssignment>
                <ParameterName>parmInnerQuery</ParameterName>
                <BindedVariableOrParameterName>User::GetUpdates</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>ChangeVersion</ParameterName>
                <BindedVariableOrParameterName>User::ChangeVersion</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>LoadType</ParameterName>
                <BindedVariableOrParameterName>$Package::LoadType</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>ChangeOperation</ParameterName>
                <BindedVariableOrParameterName>User::ChangeOp_Insert</BindedVariableOrParameterName>
              </ParameterAssignment>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Iterate Through Version Numbers.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{A5A25AC4-BA02-423A-8641-9395C9739398}"
          DTS:From="Package\Iterate Through Version Numbers\EPT_ExecInParallel_Inserts"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Iterate Through Version Numbers\EPT_ExecInParallel_Updates" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Iterate Through Version Numbers.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{9E5BE44C-EA7A-4A63-8D05-89D3485A93C4}"
          DTS:From="Package\Iterate Through Version Numbers\EPT_ExecInParallel_Updates"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Iterate Through Version Numbers\EPT_ExecInParallel_Deletes" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[ChangeLoad]"
      DTS:CreationName=""
      DTS:DTSID="{27AE769E-4B25-4DC6-80F2-8D681AEAF090}"
      DTS:EvalOp="3"
      DTS:Expression="@[$Package::LoadType] == &quot;Changes&quot;"
      DTS:From="Package\EST_GetVersionNumbers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="ChangeLoad"
      DTS:To="Package\Iterate Through Version Numbers" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[InitialLoad]"
      DTS:CreationName=""
      DTS:DTSID="{077A511C-27F6-4B9D-BA80-6D429DA2CEBD}"
      DTS:EvalOp="3"
      DTS:Expression="@[$Package::LoadType] == &quot;Initial&quot;"
      DTS:From="Package\EST_GetVersionNumbers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="InitialLoad"
      DTS:To="Package\EPT_ExecInParallel_Initial" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="231,42"
          Id="Package\EPT_ExecInParallel_Initial"
          TopLeft="290,261.5" />
        <NodeLayout
          Size="280,42"
          Id="Package\EST_GetVersionNumbers"
          TopLeft="265.5,5.5" />
        <NodeLayout
          Size="209,42"
          Id="Package\Iterate Through Version Numbers\EPT_ExecInParallel_Deletes"
          TopLeft="7.50000000000003,209.5" />
        <NodeLayout
          Size="207,42"
          Id="Package\Iterate Through Version Numbers\EPT_ExecInParallel_Inserts"
          TopLeft="8.50000000000001,5.5" />
        <NodeLayout
          Size="213,42"
          Id="Package\Iterate Through Version Numbers\EPT_ExecInParallel_Updates"
          TopLeft="5.50000000000003,107.5" />
        <EdgeLayout
          Id="Package\Iterate Through Version Numbers.PrecedenceConstraints[Constraint 1]"
          TopLeft="112,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Through Version Numbers.PrecedenceConstraints[Constraint 2]"
          TopLeft="112,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="224,306"
          Size="224,350"
          Id="Package\Iterate Through Version Numbers"
          TopLeft="5.50000000000006,107.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[ChangeLoad]"
          TopLeft="360.166666666667,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-242.666666666667,60"
              Start="0,0"
              End="-242.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2045454545454" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2045454545454"
                    Point2="0,24.2045454545454"
                    Point3="-4,24.2045454545454" />
                  <mssgle:LineSegment
                    End="-238.666666666667,24.2045454545454" />
                  <mssgle:CubicBezierSegment
                    Point1="-238.666666666667,24.2045454545454"
                    Point2="-242.666666666667,24.2045454545454"
                    Point3="-242.666666666667,28.2045454545454" />
                  <mssgle:LineSegment
                    End="-242.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-157.699973958333,29.2045454545454,72.73328125,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[InitialLoad]"
          TopLeft="450.833333333333,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-45.3333333333333,214"
              Start="0,0"
              End="-45.3333333333333,206.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,82.3295454545455" />
                  <mssgle:CubicBezierSegment
                    Point1="0,82.3295454545455"
                    Point2="0,86.3295454545455"
                    Point3="-4,86.3295454545455" />
                  <mssgle:LineSegment
                    End="-41.3333333333333,86.3295454545455" />
                  <mssgle:CubicBezierSegment
                    Point1="-41.3333333333333,86.3295454545455"
                    Point2="-45.3333333333333,86.3295454545455"
                    Point3="-45.3333333333333,90.3295454545455" />
                  <mssgle:LineSegment
                    End="-45.3333333333333,206.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-54.8133072916666,91.3295454545455,64.29328125,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <PrecedenceConstraint
    design-time-name="Package.PrecedenceConstraints[ChangeLoad]">
    <ShowAnnotation>ConstraintName</ShowAnnotation>
  </PrecedenceConstraint>
  <PrecedenceConstraint
    design-time-name="Package.PrecedenceConstraints[InitialLoad]">
    <ShowAnnotation>ConstraintName</ShowAnnotation>
  </PrecedenceConstraint>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>